@page "/desk/write"
@page "/desk/write/{Id:guid}"
@inject WriteVM VM
@inject IToastService _toast

<h3 class="text-2xl font-bold mb-4"> @(Id == Guid.Empty ? "Write a Blog" : "Edit Blog")</h3>

<BlogForm 
    TViewModel="WriteVM" 
    VM="VM" 
    OnValidSubmit="SaveDraftAsync">
    <Buttons>
        <button type="submit" class="btn btn-primary mt-1">Save Draft</button>
        <button type="button" class="btn btn-secondary mt-1" @onclick="Cancel">Cancel</button>
    </Buttons>
</BlogForm>


@code {

    [Parameter] public Guid Id { get; set; } = Guid.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (Id != Guid.Empty)
        {
            await VM.LoadBlogAsync(Id);
        }
    }

    private async Task SaveDraftAsync()
    {
        var result = await VM.SaveAsDraftAsync();

        if (result.Success)
        {
            _toast.ShowSuccess("Draft saved successfully!");
        }
        else
        {
            var error = result.Errors.Any() ? string.Join(", ", result.Errors) : "Unable to save draft.";
            _toast.ShowError(error);
        }
    }

    private void Cancel()
    {
        VM.Cancel();
        _toast.ShowInfo("Draft cancelled.");
    }
}

